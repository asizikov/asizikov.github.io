<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Anton Sizikov</title>
    <link>//:1313/tags/devops/</link>
    <description>Recent content in Devops on Anton Sizikov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//:1313/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Actions: Unified Build Pipeline for Multi-Repo Application</title>
      <link>//:1313/2024/04/01/github-actions-mulitrepo/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>//:1313/2024/04/01/github-actions-mulitrepo/</guid>
      <description>&lt;h2 id=&#34;common-misconceptions-about-github-actions&#34;&gt;Common Misconceptions about GitHub Actions&lt;/h2&gt;&#xA;&lt;p&gt;The other day, I was working with a customer who was planning a migration from JetBrains TeamCity to GitHub Actions.&#xA;They expressed a concern that GitHub Actions does not work well in multi-repo setup; they were used to having build pipelines separate from the source code distributed across multiple repositories.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Container Registry. Keeping traffic below the spending limit.</title>
      <link>//:1313/2023/01/23/ghcr-acr-traffic/</link>
      <pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate>
      <guid>//:1313/2023/01/23/ghcr-acr-traffic/</guid>
      <description>&lt;p&gt;GitHub Container Registry is a great service. It&amp;rsquo;s free for public repositories and it&amp;rsquo;s integrated with GitHub Actions. Unfortunately, it&amp;rsquo;s not free for private packages. The free tier allows 1 GB of data transfer per month.&#xA;What happens when you reach the limit depends on your payment profile. You will either be prevented from downloading your images or you&amp;rsquo;ll be charged for the consumed traffic.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Environment Protection with Tags</title>
      <link>//:1313/2022/11/26/environment-protection-tags/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>//:1313/2022/11/26/environment-protection-tags/</guid>
      <description>&lt;p&gt;A recent request from a customer caught my attention. They were trying to set up a CD pipeline that should deploy packages to production when there is a new tag pushed to the repository. At the same time, they wanted some control over the process so that not everyone can init a release by pushing a tag to the repository.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AzureDevOps and hosted agents</title>
      <link>//:1313/2022/08/22/ado-hosted-agents/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      <guid>//:1313/2022/08/22/ado-hosted-agents/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;&#xA;&lt;p&gt;Today I&amp;rsquo;m going to talk about self-hosted build agents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure WSL2 limits on Windows 10</title>
      <link>//:1313/2021/02/03/wsl2-limits-vmmem/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      <guid>//:1313/2021/02/03/wsl2-limits-vmmem/</guid>
      <description>&lt;p&gt;WSL2 on Windows 10 has some issues, but I still prefere it to run my docker containers locally.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure CD for Azure WebApp with Terraform Provider for Octopus Deploy</title>
      <link>//:1313/2021/01/27/terraform-octopus-deploy/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      <guid>//:1313/2021/01/27/terraform-octopus-deploy/</guid>
      <description>&lt;p&gt;In this post, I&amp;rsquo;m going to configure the continuous delivery process for Azure WebApp (Azure Function in this case, but that&amp;rsquo;s pretty much the same) with Octopus Deploy. To make it a little bit interesting I&amp;rsquo;m going to use Configuration-as-Code approach with a brand new &lt;a href=&#34;https://registry.terraform.io/providers/OctopusDeployLabs/octopusdeploy/latest&#34;&gt;Octopus provider for Terraform&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using GitHub Container Registry with Kubernetes</title>
      <link>//:1313/2020/10/08/using-github-registry-with-k8s/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <guid>//:1313/2020/10/08/using-github-registry-with-k8s/</guid>
      <description>&lt;p&gt;GitHub Container Registry was introduced on the 1st of September 2020. It&amp;rsquo;s still in the Beta stage, so it&amp;rsquo;s rather not recommended to use it in production. However, it offers us free private storage for our Docker images, at least until the end of the Beta period.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker image tests</title>
      <link>//:1313/2020/09/29/container-tests/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      <guid>//:1313/2020/09/29/container-tests/</guid>
      <description>&lt;p&gt;Today we&amp;rsquo;re going to set up a CI/CD GitHub Action with a Container Structure Test step which will help us to enforce the certain quality policies for the images which we build and ship.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Provision your Azure environment with Terraform and Octopus Deploy</title>
      <link>//:1313/2020/03/21/azure-terraform-octopus/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      <guid>//:1313/2020/03/21/azure-terraform-octopus/</guid>
      <description>&lt;p&gt;My current project has reached the point where we have to manage our infrastructure in a more organized way rather than ad-hoc manual configurations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CatLight</title>
      <link>//:1313/2016/04/05/catlight-tool/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      <guid>//:1313/2016/04/05/catlight-tool/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s hard to imagine modern development without continuous intergation and unit-tests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fully automated Continuous Integration for your Open Source library for free</title>
      <link>//:1313/2016/01/10/full-stack-ci-for-free/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      <guid>//:1313/2016/01/10/full-stack-ci-for-free/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//:1313/images/ci-for-free/communism.png&#34; alt=&#34;open source is commumism&#34;&gt;&#xA;This is a long title. Well, the post is going to be long as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Deployment statuses</title>
      <link>//:1313/2015/11/01/github-deployments/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      <guid>//:1313/2015/11/01/github-deployments/</guid>
      <description>&lt;p&gt;Itâ€™s very important to collect and track as much information as you can about your system. We have logging, monitoring, reports and analytics. All the systems that we build are not just packages, which are deployed to the server/computer or device. Everything starts with Issue Tracking system and through the code goes to production. The code and the process of coding both look like an important part of the system and it makes a lot of sense to collect and store all the data about code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
